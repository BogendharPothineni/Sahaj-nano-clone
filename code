# Import necessary libraries
from flask import Flask, request, jsonify

# Create a Flask app
app = Flask(__name__)

# Create a dictionary to store employee data
employee_data = {}

# Function to generate a unique employee ID
def generate_employee_id():
    # You can implement your own logic for generating IDs
    pass

# Function to check if an employee exists
def employee_exists(employee_id):
    return employee_id in employee_data

# Route to check service availability
@app.route('/greeting', methods=['GET'])
def greeting():
    return "Hello world!", 200

# Route to create a new employee
@app.route('/employee', methods=['POST'])
def create_employee():
    try:
        data = request.get_json()
        name = data['name']
        city = data['city']
        
        # Generate a unique employee ID
        employee_id = generate_employee_id()

        # Store employee data
        employee_data[employee_id] = {
            'name': name,
            'city': city
        }

        response = {'employeeId': employee_id}
        return jsonify(response), 201

    except Exception as e:
        return jsonify({'message': 'Invalid request'}), 400

# Route to get an employee by ID
@app.route('/employee/<string:employee_id>', methods=['GET'])
def get_employee(employee_id):
    if employee_exists(employee_id):
        employee = employee_data[employee_id]
        return jsonify(employee), 200
    else:
        return jsonify({'message': f'Employee with {employee_id} was not found'}), 404

# Route to search employees
@app.route('/employees/search', methods=['POST'])
def search_employees():
    try:
        data = request.get_json()
        fields = data['fields']
        condition = data.get('condition', 'AND')

        # Implement logic to filter employees based on fields and condition
        # Populate the result list with matching employees

        result = []

        return jsonify(result), 200

    except Exception as e:
        return jsonify({'message': 'Invalid request'}), 400

# Route to get all employees
@app.route('/employees/all', methods=['GET'])
def get_all_employees():
    employees = list(employee_data.values())
    return jsonify(employees), 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
